class Solution {
public:
    int res = 0;
    int trap(vector<int>& height) {
        
        int n = height.size();
        if(n==0)
        {
            return 0;
        }
        int left[n];
        int right[n];
        left[0] = height[0];
        right[n-1] = height[n-1];
        
        for(int i = 1; i < n; i++)
        {
            left[i] = max(left[i-1],height[i]);
        }
        
        for(int j = n-2; j>=0; j--)
        {
            right[j] = max(right[j+1],height[j]);
        }
        
        for(int k  = 1; k<=n-2; k++)
        {
          res = res + min(left[k],right[k])-height[k];
            
        }
        return res;
    }
};
